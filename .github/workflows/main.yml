name: yopa.page CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    steps:
      # Shallow clone with only the last 1 commit
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 1
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update -y && sudo apt install -y \
            libimage-exiftool-perl \
            jpegoptim \
            optipng \
            imagemagick \
            webp
      # Set up Hugo with fast render
      - uses: peaceiris/actions-hugo@v2
        with:
          extended: true
      # Initialize Terraform environments
      - name: Initialize Terraform (global)
        run: ENV=global make init
      - name: Initialize Terraform (prod)
        run: ENV=prod make init
      # Deploy to staging (inactive) environment
      - name: Deploy global infrastructure
        if: github.event_name == 'push'
        run: ENV=global make apply
      - name: Deploy to staging environment
        if: github.event_name == 'push'
        run: ENV=prod make deploy
      # For PRs, just validate the configuration
      - name: Validate deployment configuration
        if: github.event_name == 'pull_request'
        run: |
          echo "🔍 Validating deployment configuration for PR..."
          ENV=global make validate
          ENV=prod make validate
          echo "✅ Configuration validation complete"
      - name: Output staging deployment info
        run: |
          echo "🚀 Staging deployment complete!"
          echo "The new version has been deployed to the inactive environment."
          echo "You can now test the changes before promoting to live."
          echo ""
          echo "To promote manually: make ENV=prod release"

  promote-to-live:
    name: Promote to Live
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    # Note: To enable manual approval, create a "production" environment in GitHub Settings > Environments
    # and add required reviewers. Then uncomment the line below:
    environment: production
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 1
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update -y && sudo apt install -y \
            libimage-exiftool-perl \
            jpegoptim \
            optipng \
            imagemagick \
            webp
      # Set up Hugo
      - uses: peaceiris/actions-hugo@v2
        with:
          extended: true
      # Initialize Terraform
      - name: Initialize Terraform (prod)
        run: ENV=prod make init
      # Promote staging to live
      - name: Promote to live environment
        run: ENV=prod make release
      - name: Output promotion success
        run: |
          echo "✅ Promotion to live complete!"
          echo "The new version is now serving live traffic."
          echo "CloudFront cache has been invalidated."
